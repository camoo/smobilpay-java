/*
 * Smobilpay S3P API STANDARD Smobilpay Third Party STANDARD API FOR PAYMENT COLLECTIONS OpenAPI
 * spec version: 2.2.0 NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class manually.
 */

package org.maviance.s3pjavaclient.api;

import com.google.gson.reflect.TypeToken;
import org.maviance.s3pjavaclient.*;
import org.maviance.s3pjavaclient.model.Historystd;
import org.threeten.bp.LocalDate;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.List;

/**
 * This class is used to get history of your different transactions.
 *
 * @author Valdese Kamdem
 * @see org.maviance.s3pjavaclient.api.BaseApi
 */
public class HistoryApi extends BaseApi {

    public HistoryApi() {
        super();
    }

    public HistoryApi(ApiClient apiClient) {
        super(apiClient);
    }

    /**
     * Build call for historystdGet
     *
     * @param ptn                     Unique payment collection transaction number (optional)
     * @param trid                    custom external transaction reference provided during payment collection
     *                                (optional)
     * @param timestampFrom           Start date of transactions in result set (ISO 8601) (optional)
     * @param timestampTo             End date of transactions in result set (ISO 8601) (optional)
     * @param progressListener        Progress listener
     * @param progressRequestListener Progress request listener
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public com.squareup.okhttp.Call historystdGetCall(String ptn, String trid, LocalDate timestampFrom,
                                                      LocalDate timestampTo, final ProgressResponseBody.ProgressListener progressListener,
                                                      final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        if (ptn != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("ptn", ptn));
        if (trid != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("trid", trid));
        if (timestampFrom != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("timestamp_from", timestampFrom));
        if (timestampTo != null)
            localVarQueryParams.addAll(apiClient.parameterToPair("timestamp_to", timestampTo));

        return getCall(progressListener, progressRequestListener, "/historystd", localVarQueryParams);
    }

    private com.squareup.okhttp.Call historystdGetValidateBeforeCall(String ptn, String trid, LocalDate timestampFrom,
                                                                     LocalDate timestampTo, final ProgressResponseBody.ProgressListener progressListener,
                                                                     final ProgressRequestBody.ProgressRequestListener progressRequestListener) throws ApiException {

        //Validation for required input is supposed to be added here.
        return historystdGetCall(ptn, trid, timestampFrom, timestampTo, progressListener, progressRequestListener);
    }

    /**
     * Retrieve list of historic payment collection. This endpoint allows the search for historic
     * payment collection records by time, payment transaction number (PTN) or a custom transaction
     * reference (TRID) that was provided during payment collection. At least one of these
     * parameters has to be provided!
     *
     * @param ptn           Unique payment collection transaction number (optional)
     * @param trid          custom external transaction reference provided during payment collection
     *                      (optional)
     * @param timestampFrom Start date of transactions in result set (ISO 8601) (optional)
     * @param timestampTo   End date of transactions in result set (ISO 8601) (optional)
     * @return List&lt;Historystd&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response
     *                      body
     */
    public List<Historystd> historystdGet(String ptn, String trid, LocalDate timestampFrom, LocalDate timestampTo)
            throws ApiException {
        ApiResponse<List<Historystd>> resp = historystdGetWithHttpInfo(ptn, trid, timestampFrom, timestampTo);
        return resp.getData();
    }

    /**
     * Retrieve list of historic payment collection. This endpoint allows the search for historic
     * payment collection records by time, payment transaction number (PTN) or a custom transaction
     * reference (TRID) that was provided during payment collection. At least one of these
     * parameters has to be provided!
     *
     * @param ptn           Unique payment collection transaction number (optional)
     * @param trid          custom external transaction reference provided during payment collection
     *                      (optional)
     * @param timestampFrom Start date of transactions in result set (ISO 8601) (optional)
     * @param timestampTo   End date of transactions in result set (ISO 8601) (optional)
     * @return ApiResponse&lt;List&lt;Historystd&gt;&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response
     *                      body
     */
    public ApiResponse<List<Historystd>> historystdGetWithHttpInfo(String ptn, String trid, LocalDate timestampFrom,
                                                                   LocalDate timestampTo) throws ApiException {
        com.squareup.okhttp.Call call =
                historystdGetValidateBeforeCall(ptn, trid, timestampFrom, timestampTo, null, null);
        Type localVarReturnType = new TypeToken<List<Historystd>>() {
        }.getType();
        return apiClient.execute(call, localVarReturnType);
    }

    /**
     * Retrieve list of historic payment collection. (asynchronously) This endpoint allows the
     * search for historic payment collection records by time, payment transaction number (PTN) or a
     * custom transaction reference (TRID) that was provided during payment collection. At least one
     * of these parameters has to be provided!
     *
     * @param ptn           Unique payment collection transaction number (optional)
     * @param trid          custom external transaction reference provided during payment collection
     *                      (optional)
     * @param timestampFrom Start date of transactions in result set (ISO 8601) (optional)
     * @param timestampTo   End date of transactions in result set (ISO 8601) (optional)
     * @param callback      The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public com.squareup.okhttp.Call historystdGetAsync(String ptn, String trid, LocalDate timestampFrom,
                                                       LocalDate timestampTo, final ApiCallback<List<Historystd>> callback) throws ApiException {

        ProgressResponseBody.ProgressListener progressListener = null;
        ProgressRequestBody.ProgressRequestListener progressRequestListener = null;

        if (callback != null) {
            progressListener = new ProgressResponseBody.ProgressListener() {
                @Override
                public void update(long bytesRead, long contentLength, boolean done) {
                    callback.onDownloadProgress(bytesRead, contentLength, done);
                }
            };

            progressRequestListener = new ProgressRequestBody.ProgressRequestListener() {
                @Override
                public void onRequestProgress(long bytesWritten, long contentLength, boolean done) {
                    callback.onUploadProgress(bytesWritten, contentLength, done);
                }
            };
        }

        com.squareup.okhttp.Call call = historystdGetValidateBeforeCall(ptn, trid, timestampFrom, timestampTo,
                progressListener, progressRequestListener);
        Type localVarReturnType = new TypeToken<List<Historystd>>() {
        }.getType();
        apiClient.executeAsync(call, localVarReturnType, callback);
        return call;
    }


}
