/*
 * Smobilpay S3P API STANDARD
 * Smobilpay Third Party STANDARD API FOR PAYMENT COLLECTIONS
 *
 * OpenAPI spec version: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.maviance.s3pjavaclient.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.LocalDate;

import java.io.IOException;
import java.util.Objects;

/**
 * Collectionstd
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-03-20T16:37:47.602Z")
public class Collectionstd {
	@SerializedName("ptn")
	private String ptn = null;

	@SerializedName("timestamp")
	private LocalDate timestamp = null;

	@SerializedName("agentBalance")
	private Float agentBalance = null;

	@SerializedName("receiptNumber")
	private String receiptNumber = null;

	@SerializedName("veriCode")
	private String veriCode = null;

	@SerializedName("priceLocalCur")
	private Float priceLocalCur = null;

	@SerializedName("priceSystemCur")
	private Float priceSystemCur = null;

	@SerializedName("localCur")
	private String localCur = null;

	@SerializedName("systemCur")
	private String systemCur = null;

	@SerializedName("trid")
	private String trid = null;

	@SerializedName("pin")
	private String pin = null;

	/**
	 * payment processing status
	 */
	@JsonAdapter(StatusEnum.Adapter.class)
	public enum StatusEnum {
		REVERSED("REVERSED"),

		DEBITED("DEBITED"),

		PENDING("PENDING"),

		INPROCESS("INPROCESS"),

		ERRORED("ERRORED"),

		UNDERINVESTIGATION("UNDERINVESTIGATION"),

		ERROREDREFUNDED("ERROREDREFUNDED"),

		SUCCESS("SUCCESS");

		private String value;

		StatusEnum(String value) {
			this.value = value;
		}

		public String getValue() {
			return value;
		}

		@Override
		public String toString() {
			return String.valueOf(value);
		}

		public static StatusEnum fromValue(String text) {
			for (StatusEnum b : StatusEnum.values()) {
				if (String.valueOf(b.value).equals(text)) {
					return b;
				}
			}
			return null;
		}

		public static class Adapter extends TypeAdapter<StatusEnum> {
			@Override
			public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
				jsonWriter.value(enumeration.getValue());
			}

			@Override
			public StatusEnum read(final JsonReader jsonReader) throws IOException {
				String value = jsonReader.nextString();
				return StatusEnum.fromValue(String.valueOf(value));
			}
		}
	}

	@SerializedName("status")
	private StatusEnum status = null;

	@SerializedName("payItemId")
	private String payItemId = null;

	@SerializedName("payItemDescr")
	private String payItemDescr = null;

	public Collectionstd ptn(String ptn) {
		this.ptn = ptn;
		return this;
	}

	/**
	 * Unique payment collection transaction number
	 * 
	 * @return ptn
	 **/
	@ApiModelProperty(required = true, value = "Unique payment collection transaction number")
	public String getPtn() {
		return ptn;
	}

	public void setPtn(String ptn) {
		this.ptn = ptn;
	}

	public Collectionstd timestamp(LocalDate timestamp) {
		this.timestamp = timestamp;
		return this;
	}

	/**
	 * Timestamp of processing in System (ISO 8601)
	 * 
	 * @return timestamp
	 **/
	@ApiModelProperty(required = true, value = "Timestamp of processing in  System (ISO 8601)")
	public LocalDate getTimestamp() {
		return timestamp;
	}

	public void setTimestamp(LocalDate timestamp) {
		this.timestamp = timestamp;
	}

	public Collectionstd agentBalance(Float agentBalance) {
		this.agentBalance = agentBalance;
		return this;
	}

	/**
	 * Current Balance of agent account AFTER collection in system currency
	 * 
	 * @return agentBalance
	 **/
	@ApiModelProperty(required = true, value = "Current Balance of agent account AFTER collection in system currency")
	public Float getAgentBalance() {
		return agentBalance;
	}

	public void setAgentBalance(Float agentBalance) {
		this.agentBalance = agentBalance;
	}

	public Collectionstd receiptNumber(String receiptNumber) {
		this.receiptNumber = receiptNumber;
		return this;
	}

	/**
	 * Unique receipt number
	 * 
	 * @return receiptNumber
	 **/
	@ApiModelProperty(required = true, value = "Unique receipt number")
	public String getReceiptNumber() {
		return receiptNumber;
	}

	public void setReceiptNumber(String receiptNumber) {
		this.receiptNumber = receiptNumber;
	}

	public Collectionstd veriCode(String veriCode) {
		this.veriCode = veriCode;
		return this;
	}

	/**
	 * Verification code for receipt number
	 * 
	 * @return veriCode
	 **/
	@ApiModelProperty(required = true, value = "Verification code for receipt number")
	public String getVeriCode() {
		return veriCode;
	}

	public void setVeriCode(String veriCode) {
		this.veriCode = veriCode;
	}

	public Collectionstd priceLocalCur(Float priceLocalCur) {
		this.priceLocalCur = priceLocalCur;
		return this;
	}

	/**
	 * Price paid in local currency
	 * 
	 * @return priceLocalCur
	 **/
	@ApiModelProperty(required = true, value = "Price paid in local currency")
	public Float getPriceLocalCur() {
		return priceLocalCur;
	}

	public void setPriceLocalCur(Float priceLocalCur) {
		this.priceLocalCur = priceLocalCur;
	}

	public Collectionstd priceSystemCur(Float priceSystemCur) {
		this.priceSystemCur = priceSystemCur;
		return this;
	}

	/**
	 * Price paid in system currency
	 * 
	 * @return priceSystemCur
	 **/
	@ApiModelProperty(required = true, value = "Price paid in system currency")
	public Float getPriceSystemCur() {
		return priceSystemCur;
	}

	public void setPriceSystemCur(Float priceSystemCur) {
		this.priceSystemCur = priceSystemCur;
	}

	public Collectionstd localCur(String localCur) {
		this.localCur = localCur;
		return this;
	}

	/**
	 * Local currency of service. (Format: ISO 4217)
	 * 
	 * @return localCur
	 **/
	@ApiModelProperty(required = true, value = "Local currency of service. (Format: ISO 4217)")
	public String getLocalCur() {
		return localCur;
	}

	public void setLocalCur(String localCur) {
		this.localCur = localCur;
	}

	public Collectionstd systemCur(String systemCur) {
		this.systemCur = systemCur;
		return this;
	}

	/**
	 * Currency of billing by system (Format: ISO 4217)
	 * 
	 * @return systemCur
	 **/
	@ApiModelProperty(required = true, value = "Currency of billing by  system (Format: ISO 4217)")
	public String getSystemCur() {
		return systemCur;
	}

	public void setSystemCur(String systemCur) {
		this.systemCur = systemCur;
	}

	public Collectionstd trid(String trid) {
		this.trid = trid;
		return this;
	}

	/**
	 * custom external transaction reference provided during payment collection
	 * 
	 * @return trid
	 **/
	@ApiModelProperty(value = "custom external transaction reference provided during payment collection")
	public String getTrid() {
		return trid;
	}

	public void setTrid(String trid) {
		this.trid = trid;
	}

	public Collectionstd pin(String pin) {
		this.pin = pin;
		return this;
	}

	/**
	 * Only for VOUCHER services - field returning a PIN or digital code. Will
	 * return “null” otherwise.
	 * 
	 * @return pin
	 **/
	@ApiModelProperty(value = "Only for VOUCHER services - field returning a PIN or digital code. Will return “null” otherwise.")
	public String getPin() {
		return pin;
	}

	public void setPin(String pin) {
		this.pin = pin;
	}

	public Collectionstd status(StatusEnum status) {
		this.status = status;
		return this;
	}

	/**
	 * payment processing status
	 * 
	 * @return status
	 **/
	@ApiModelProperty(required = true, value = "payment processing status")
	public StatusEnum getStatus() {
		return status;
	}

	public void setStatus(StatusEnum status) {
		this.status = status;
	}

	public Collectionstd payItemId(String payItemId) {
		this.payItemId = payItemId;
		return this;
	}

	/**
	 * Unique Payment Item ID for payment item identification
	 * 
	 * @return payItemId
	 **/
	@ApiModelProperty(value = "Unique  Payment Item ID for payment item identification")
	public String getPayItemId() {
		return payItemId;
	}

	public void setPayItemId(String payItemId) {
		this.payItemId = payItemId;
	}

	public Collectionstd payItemDescr(String payItemDescr) {
		this.payItemDescr = payItemDescr;
		return this;
	}

	/**
	 * Contains optional description about payment details (e.g. merchant provided
	 * bill types)
	 * 
	 * @return payItemDescr
	 **/
	@ApiModelProperty(value = "Contains optional description about payment details (e.g. merchant provided bill types)")
	public String getPayItemDescr() {
		return payItemDescr;
	}

	public void setPayItemDescr(String payItemDescr) {
		this.payItemDescr = payItemDescr;
	}

	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		Collectionstd collectionstd = (Collectionstd) o;
		return Objects.equals(this.ptn, collectionstd.ptn) && Objects.equals(this.timestamp, collectionstd.timestamp)
				&& Objects.equals(this.agentBalance, collectionstd.agentBalance)
				&& Objects.equals(this.receiptNumber, collectionstd.receiptNumber)
				&& Objects.equals(this.veriCode, collectionstd.veriCode)
				&& Objects.equals(this.priceLocalCur, collectionstd.priceLocalCur)
				&& Objects.equals(this.priceSystemCur, collectionstd.priceSystemCur)
				&& Objects.equals(this.localCur, collectionstd.localCur)
				&& Objects.equals(this.systemCur, collectionstd.systemCur)
				&& Objects.equals(this.trid, collectionstd.trid) && Objects.equals(this.pin, collectionstd.pin)
				&& Objects.equals(this.status, collectionstd.status)
				&& Objects.equals(this.payItemId, collectionstd.payItemId)
				&& Objects.equals(this.payItemDescr, collectionstd.payItemDescr);
	}

	@Override
	public int hashCode() {
		return Objects.hash(ptn, timestamp, agentBalance, receiptNumber, veriCode, priceLocalCur, priceSystemCur,
				localCur, systemCur, trid, pin, status, payItemId, payItemDescr);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class Collectionstd {\n");

		sb.append("    ptn: ").append(toIndentedString(ptn)).append("\n");
		sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
		sb.append("    agentBalance: ").append(toIndentedString(agentBalance)).append("\n");
		sb.append("    receiptNumber: ").append(toIndentedString(receiptNumber)).append("\n");
		sb.append("    veriCode: ").append(toIndentedString(veriCode)).append("\n");
		sb.append("    priceLocalCur: ").append(toIndentedString(priceLocalCur)).append("\n");
		sb.append("    priceSystemCur: ").append(toIndentedString(priceSystemCur)).append("\n");
		sb.append("    localCur: ").append(toIndentedString(localCur)).append("\n");
		sb.append("    systemCur: ").append(toIndentedString(systemCur)).append("\n");
		sb.append("    trid: ").append(toIndentedString(trid)).append("\n");
		sb.append("    pin: ").append(toIndentedString(pin)).append("\n");
		sb.append("    status: ").append(toIndentedString(status)).append("\n");
		sb.append("    payItemId: ").append(toIndentedString(payItemId)).append("\n");
		sb.append("    payItemDescr: ").append(toIndentedString(payItemDescr)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces
	 * (except the first line).
	 */
	private String toIndentedString(java.lang.Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
